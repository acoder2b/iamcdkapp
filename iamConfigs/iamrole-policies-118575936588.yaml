account_id:
- '118575936588'
region: us-east-1
stack_name: iam-role-policies-pipeline-stack
iam_policies: []
roles:
-   roleName: AccessAnalyzerTrustedService
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::121925031476:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: AccessAnalyzerTrustedServicevykQb3AcIDqN
    inlinePolicies:
        AccessAnalyzerTrustedServicePolicy:
            Version: '2012-10-17'
            Statement:
            -   Sid: A2CreateAnalyzer
                Effect: Allow
                Action:
                - access-analyzer:ListAnalyzers
                - access-analyzer:GetAnalyzer
                - access-analyzer:CreateAnalyzer
                - ec2:DescribeRegions
                Resource: '*'
            -   Sid: CreateSLR
                Effect: Allow
                Action: iam:CreateServiceLinkedRole
                Condition:
                    StringEquals:
                        iam:AWSServiceName: access-analyzer.amazonaws.com
                Resource: '*'
-   roleName: AccessAnalyzerTrustedService12
    deletionPolicy: RETAIN
    description: Access Analyzer Trusted Service Role
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::780258025701:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: AccessAnalyzerTrustedServicey7yfM3aaua7H
    tags:
    -   key: stack-owner11
        value: '780258025701111'
    -   key: stack-environment
        value: dev
    -   key: stack-owner
        value: '780258025701'
    -   key: stack-name
        value: iam-role-demo
    permissionsBoundary: arn:aws:iam::aws:policy/AdministratorAccess
    managedPolicies:
    - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
    - arn:aws:iam::aws:policy/AdministratorAccess
    inlinePolicies:
        AccessAnalyzerTrustedServicePolicy:
            Version: '2012-10-17'
            Statement:
            -   Action:
                - access-analyzer:ListAnalyzers
                - access-analyzer:GetAnalyzer
                - access-analyzer:CreateAnalyzer
                Resource: '*'
                Effect: Allow
                Sid: A2CreateAnalyzer
            -   Condition:
                    StringEquals:
                        iam:AWSServiceName: access-analyzer.amazonaws.com
                Action: iam:CreateServiceLinkedRole
                Resource: '*'
                Effect: Allow
                Sid: CreateSLR
-   roleName: AccessAnalyzerTrustedService122
    deletionPolicy: RETAIN
    description: Access Analyzer Trusted Service Role
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::780258025701:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: AccessAnalyzerTrustedServicey7yfM3aaua7H
    tags:
    -   key: stack-environment
        value: dev
    -   key: stack-owner
        value: '780258025701'
    -   key: stack-owner11
        value: '780258025701111'
    -   key: stack-name
        value: iam-role-demo
    permissionsBoundary: arn:aws:iam::aws:policy/AdministratorAccess
    managedPolicies:
    - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
    - arn:aws:iam::aws:policy/AdministratorAccess
    inlinePolicies:
        AccessAnalyzerTrustedServicePolicy:
            Version: '2012-10-17'
            Statement:
            -   Action:
                - access-analyzer:ListAnalyzers
                - access-analyzer:GetAnalyzer
                - access-analyzer:CreateAnalyzer
                Resource: '*'
                Effect: Allow
                Sid: A2CreateAnalyzer
            -   Condition:
                    StringEquals:
                        iam:AWSServiceName: access-analyzer.amazonaws.com
                Action: iam:CreateServiceLinkedRole
                Resource: '*'
                Effect: Allow
                Sid: CreateSLR
-   roleName: Admin
    deletionPolicy: RETAIN
    sessionDuration: 43200
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::727820809195:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: IsengardExternalId9Fq3K8gScy6h
    managedPolicies:
    - arn:aws:iam::aws:policy/AdministratorAccess
-   roleName: AVMContainersUserRole
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::214732530209:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: InspectorEnablementRoleOKkZldQGo9B3
    inlinePolicies:
        AWSContainerAssessmentPolicy:
            Version: '2012-10-17'
            Statement:
            -   Sid: AVMContainersUserPolicyForStandaloneAccounts
                Effect: Allow
                Action:
                - inspector2:BatchGetAccountStatus
                - inspector2:ListCoverage
                - inspector2:ListCoverageStatistics
                - inspector2:ListFindingAggregations
                - inspector2:ListFindings
                - inspector2:UpdateConfiguration
                - inspector2:GetConfiguration
                - inspector2:Enable
                - ecr:PutRegistryScanningConfiguration
                - ecr:GetRegistryScanningConfiguration
                - ecr:BatchGetImage
                - ecr:GetDownloadUrlForLayer
                - ecr:DescribeRepositories
                - ecr:GetAuthorizationToken
                Resource: '*'
            -   Effect: Allow
                Action: iam:CreateServiceLinkedRole
                Resource: arn:*:iam::*:role/aws-service-role/inspector2.amazonaws.com/AWSServiceRoleForAmazonInspector2
                Condition:
                    StringEquals:
                        iam:AWSServiceName: inspector2.amazonaws.com
-   roleName: AWSControlTowerExecution
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Effect: Allow
            Principal:
                AWS: arn:aws:iam::909180469036:root
            Action: sts:AssumeRole
    managedPolicies:
    - arn:aws:iam::aws:policy/AdministratorAccess
-   roleName: awslogs.prod.kelex.molecule.toppatterns
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                Service: molecule-recommendations.cloudwatchlogs.aws.internal
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: KelexDataFetcherDIvEyoGgFIBG
    inlinePolicies:
        AWSLogsOptimizerPolicy:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - cloudwatch:GetMetricData
                Resource: '*'
            -   Effect: Allow
                Action:
                - logs:GetQueryResults
                - logs:StartQuery
                Resource: arn:aws:logs:*:118575936588:log-group:*
-   roleName: AwsSecurityAudit
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::877377650033:root
                Service: palisade.amazonaws.com
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: AwsSecurityAuditmK6DA8BmJECQ
    managedPolicies:
    - arn:aws:iam::aws:policy/SecurityAudit
-   roleName: AwsSecurityNacundaAudit
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::350429083849:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: AwsSecurityNacundaAuditg0c3uPiEEmgB
    inlinePolicies:
        AwsSecurityNacundaAuditPolicy:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action: guardduty:*
                Resource: '*'
            -   Effect: Allow
                Action: iam:CreateServiceLinkedRole
                Resource: '*'
                Condition:
                    StringLike:
                        iam:AWSServiceName:
                        - guardduty.amazonaws.com
                        - malware-protection.guardduty.amazonaws.com
            -   Effect: Allow
                Action:
                - organizations:EnableAWSServiceAccess
                - organizations:RegisterDelegatedAdministrator
                - organizations:ListDelegatedAdministrators
                - organizations:ListAWSServiceAccessForOrganization
                - organizations:DescribeOrganizationalUnit
                - organizations:DescribeAccount
                - organizations:DescribeOrganization
                Resource: '*'
            -   Effect: Allow
                Action: iam:GetRole
                Resource: arn:aws:iam::*:role/*AWSServiceRoleForAmazonGuardDutyMalwareProtection
            -   Effect: Allow
                Action:
                - events:PutRule
                Resource: '*'
            -   Effect: Allow
                Action:
                - events:DeleteRule
                - events:DescribeRule
                - events:DisableRule
                - events:EnableRule
                - events:ListTargetsByRule
                - events:PutTargets
                - events:RemoveTargets
                Resource: arn:aws:events:*:*:rule/AwsSecurityNacundaAuditFindings-DO-NOT-DELETE
-   roleName: AWSVAPTAudit
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::821027173227:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: AWSVAPTAudit03iUQwdkTWw9
    managedPolicies:
    - arn:aws:iam::aws:policy/SecurityAudit
-   roleName: CloudSecAuditRole
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                Service: secops.aws.internal
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: CloudSecAuditRoleoM3EVzV8NjoR
    managedPolicies:
    - arn:aws:iam::aws:policy/SecurityAudit
    inlinePolicies:
        CloudSecAuditPolicy-prod:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - cloudwatch:DescribeInsightRules
                - cloudwatch:GetMetricStream
                - cloudwatch:ListManagedInsightRules
                - logs:StartQuery
                - logs:StopQuery
                - glue:CreateTable
                - glue:CreateDatabase
                - athena:ListWorkGroups
                - athena:CreateWorkGroup
                - athena:StartQueryExecution
                - glue:GetDatabase
                - glue:GetDatabases
                - glue:GetPartitions
                - glue:GetSchema
                - glue:GetSchemaByDefinition
                - glue:GetSchemaVersion
                - glue:GetTable
                - glue:GetTables
                - glue:GetTableVersion
                - glue:GetTableVersions
                - ec2:CreateSnapshot
                - ec2:CreateSnapshots
                - logs:GetLogGroupFields
                Resource: '*'
            -   Effect: Allow
                Action:
                - ec2:CreateTags
                Resource: arn:aws:ec2:*:*:snapshot/*
            -   Effect: Allow
                Action:
                - s3:CreateBucket
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:AbortMultipartUpload
                - s3:GetObject
                Resource: arn:aws:s3:::aws-athena-query-results-*
            -   Effect: Allow
                Action:
                - s3:ListMultipartUploadParts
                - s3:GetObject
                - s3:GetBucketLocation
                - s3:ListBucket
                Resource: arn:aws:s3:::cloudtrail-awslogs-*
            -   Effect: Allow
                Action:
                - athena:StopQueryExecution
                - athena:GetQueryExecution
                - athena:GetWorkGroup
                - athena:GetQueryResults
                Resource: arn:aws:athena:*:*:workgroup/cloudsec
-   roleName: CloudSeerTrustedServiceRole
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS:
                - arn:aws:iam::637423399230:root
                - arn:aws:iam::333692317655:root
                - arn:aws:iam::381492016180:root
                - arn:aws:iam::533267069473:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: CloudSeerTrustedServiceRole4hDXFbhy1rsw
    inlinePolicies:
        CloudSeerTrustedServicePolicy:
            Version: '2012-10-17'
            Statement:
            -   Action:
                - ec2:Describe*
                - ec2:StartNetworkInsightsAccessScopeAnalysis
                - ec2:DescribeNetworkInsightsAccessScopeAnalyses
                - ec2:GetNetworkInsightsAccessScopeAnalysisFindings
                - ssm:DescribeInstanceInformation
                - ssm:ListAssociations
                - ssm:ListCommands
                - ssm:DescribeAssociationExecutions
                - ssm:DescribeAssociationExecutionTargets
                - s3:ListAllMyBuckets
                - s3:GetBucket*
                - s3:GetEncryptionConfiguration
                - s3:GetLifecycleConfiguration
                - s3:GetAccountPublicAccessBlock
                - elasticmapreduce:ListClusters
                - elasticmapreduce:DescribeCluster
                - elasticmapreduce:ListSecurityConfigurations
                - elasticmapreduce:DescribeSecurityConfiguration
                - iam:GetAccountAuthorizationDetails
                - iam:GetAccountPasswordPolicy
                - iam:ListAccessKeys
                - iam:ListSamlProviders
                - iam:GetSamlProvider
                - iam:ListOpenIdConnectProviders
                - iam:GetOpenIdConnectProvider
                - iam:ListPolicies
                - iam:GetPolicyVersion
                - iam:GetServiceLastAccessedDetails
                - iam:GenerateServiceLastAccessedDetails
                - redshift:DescribeCluster*
                - redshift:DescribeReservedNodes
                - workspaces:DescribeWorkspaces
                - workspaces:DescribeWorkspaceDirectories
                - elasticache:DescribeCacheClusters
                - elasticache:DescribeCacheSubnetGroups
                - elasticache:ListTagsForResource
                - es:ListDomainNames
                - es:DescribeElasticsearchDomain
                - es:ListTags
                - lambda:ListFunctions
                - lambda:GetFunction
                - lambda:ListTags
                - lambda:ListAliases
                - lambda:GetPolicy
                - lambda:GetFunctionUrlConfig
                - dynamodb:ListTables
                - dynamodb:DescribeTable
                - dynamodb:DescribeContinuousBackups
                - dynamodb:ListTagsOfResource
                - dynamodb:DescribeTimeToLive
                - route53:ListHostedZones
                - route53:ListResourceRecordSets
                - route53:GetTrafficPolicy*
                - route53:ListTrafficPolic*
                - route53domains:ListDomains
                - wafv2:ListWebACLs
                - wafv2:ListLoggingConfigurations
                - bedrock:ListCustomModels
                - bedrock:ListModelCustomizationJobs
                - bedrock:GetCustomModel
                - bedrock:GetModelCustomizationJob
                - kms:ListKeys
                - kms:ListKeyPolicies
                - kms:GetKeyRotationStatus
                - kms:DescribeKey
                - elasticfilesystem:DescribeFileSystems
                - elasticbeanstalk:DescribeEnvironments
                - kinesis:ListStreams
                - kinesis:DescribeStreamSummary
                - kinesis:ListTagsForStream
                - rds:DescribeDbInstances
                - rds:DescribeDbSnapshot*
                - rds:DescribeDbCluster*
                - rds:DescribeReservedDbInstances
                - rds:ListTagsForResource
                - sns:ListTopics
                - sns:ListSubscriptionsByTopic
                - sns:GetTopicAttributes
                - sns:ListTagsForResource
                - sns:GetSubscriptionAttributes
                - elasticloadbalancing:DescribeLoadBalancer*
                - elasticloadbalancing:DescribeTarget*
                - elasticloadbalancing:DescribeListeners
                - ecs:List*
                - ecs:Describe*
                - eks:ListClusters
                - eks:DescribeCluster
                - eks:ListNodegroups
                - eks:DescribeNodegroup
                - eks:ListFargateProfiles
                - eks:DescribeFargateProfile
                - cloudsearch:DescribeDomains
                - cloudsearch:DescribeServiceAccessPolicies
                - cloudtrail:DescribeTrails
                - codedeploy:ListDeployments
                - codedeploy:GetDeployment
                - codepipeline:ListPipelines
                - codepipeline:GetPipeline
                - datapipeline:ListPipelines
                - datapipeline:GetPipelineDefinition
                - directconnect:DescribeConnections
                - sqs:ListQueues
                - sqs:GetQueueAttributes
                - sqs:ListQueueTags
                - cloudformation:ListStacks
                - cloudformation:DescribeStacks
                - cloudformation:GetTemplate*
                - cloudformation:ListStackResources
                - cloudformation:GetStackPolicy
                - acm:ListCertificates
                - acm:DescribeCertificate
                - logs:DescribeLogGroups
                - access-analyzer:ListAnalyzers
                - access-analyzer:ListFindings
                - sagemaker:ListNotebookInstances
                - sagemaker:DescribeNotebookInstance
                - sagemaker:ListNotebookInstanceLifecycleConfigs
                - sagemaker:DescribeNotebookInstanceLifecycleConfig
                - sagemaker:ListEndpoints
                - sagemaker:DescribeEndpoint
                - sagemaker:ListEndpointConfigs
                - sagemaker:DescribeEndpointConfig
                - sagemaker:ListLabelingJobs
                - sagemaker:DescribeLabelingJob
                - sagemaker:ListModels
                - sagemaker:DescribeModel
                - sagemaker:ListTrainingJobs
                - sagemaker:DescribeTrainingJob
                - organizations:DescribeOrganization
                - organizations:ListAccounts
                - organizations:ListPolicies
                - organizations:DescribePolicy
                - organizations:ListTargetsForPolicy
                - ram:ListPrincipals
                - ram:ListResources
                - ram:GetResourceShares
                - support:DescribeTrustedAdvisor*
                - support:RefreshTrustedAdvisorCheck
                - dax:DescribeClusters
                - dynamodb:ListStreams
                - dynamodb:DescribeStream
                - cloudfront:ListDistributions
                - cloudfront:ListStreamingDistributions
                - cloudfront:ListCachePolicies
                - cloudfront:ListFieldLevelEncryptionConfigs
                - cloudfront:ListFieldLevelEncryptionProfiles
                - cloudfront:ListOriginRequestPolicies
                - cloudfront:ListPublicKeys
                - cognito-identity:ListIdentityPools
                - cognito-identity:ListIdentities
                - cognito-identity:DescribeIdentity*
                - cognito-identity:GetIdentityPoolRoles
                - cognito-identity:GetPrincipalTagAttributeMap
                - cognito-idp:ListUserPool*
                - cognito-idp:ListIdentityProviders
                - cognito-idp:ListResourceServers
                - cognito-idp:DescribeUserPool*
                - cognito-idp:DescribeIdentityProvider
                - cognito-idp:DescribeResourceServer
                - backup:ListBackup*
                - backup:GetBackupPlan
                - backup:GetBackupSelection
                - backup:ListProtectedResources
                - inspector:ListFindings
                - inspector:DescribeFindings
                - inspector2:ListFindings
                - ecr:DescribeRepositories
                - ecr:ListImages
                - ecr:DescribeImages
                - glue:GetDatabases
                - glue:GetTables
                - glue:GetSecurityConfigurations
                - transcribe:ListTranscriptionJobs
                - cloudwatch:DescribeAlarms
                - secretsmanager:ListSecrets
                - secretsmanager:GetResourcePolicy
                - redshift-serverless:ListWorkgroups
                - apigateway:GET
                - guardduty:ListDetectors
                - guardduty:GetDetector
                Effect: Allow
                Resource:
                - '*'
-   roleName: CodeGuruProfilerForwardToAmazonProfiler
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                Service: codeguru-profiler-publisher.aws.internal
                AWS: arn:aws:iam::054693081941:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: CodeGuruProfilerPublisher6gzUn4kl6uDv
    inlinePolicies:
        CodeGuruProfilerPolicy:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - codeguru-profiler:GetProfile
                Resource: arn:aws:codeguru-profiler:*:118575936588:profilingGroup/*
-   roleName: DiscoveryAnalyzerTrustedService-DO-NOT-DELETE
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::090111104127:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: DiscoveryAnalyzerTrustedService-DO-NOT-DELETEOJwWWlATGLpv
    inlinePolicies:
        DiscoveryAnalyzer:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - codecommit:BatchGet*
                - codecommit:BatchDescribe*
                - codecommit:Describe*
                - codecommit:EvaluatePullRequestApprovalRules
                - codecommit:Get*
                - codecommit:List*
                - codecommit:GitPull
                Resource: '*'
-   roleName: EC2CapacityReservationService
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                Service: crs.ec2.aws.internal
                AWS: arn:aws:iam::950184135563:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: EC2CapacityReservationServicemmT3ogMkp5U9
-   roleName: GatedGardenAudit
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::638951966944:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: GatedGardenAuditoX0ygZ9WYvVo
    inlinePolicies:
        GatedGardenPolicy:
            Version: '2012-10-17'
            Statement:
            -   Sid: Stmt1464749381022
                Action:
                - codedeploy:BatchGetApplications
                - codedeploy:BatchGetDeployments
                - codedeploy:BatchGetOnPremisesInstances
                - codedeploy:GetApplication
                - codedeploy:GetApplicationRevision
                - codedeploy:GetDeployment
                - codedeploy:GetDeploymentConfig
                - codedeploy:GetDeploymentGroup
                - codedeploy:GetDeploymentInstance
                - codedeploy:GetOnPremisesInstance
                - codedeploy:ListApplicationRevisions
                - codedeploy:ListApplications
                - codedeploy:ListDeploymentConfigs
                - codedeploy:ListDeploymentGroups
                - codedeploy:ListDeploymentInstances
                - codedeploy:ListDeployments
                - codedeploy:ListOnPremisesInstances
                Effect: Allow
                Resource: '*'
-   roleName: GatedGardenInternalAudit
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::222385417670:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: GatedGardenInternalAuditcpyQzNWcZPg4
    inlinePolicies:
        GatedGardenInternalAuditPolicy:
            Version: '2012-10-17'
            Statement:
            -   Sid: VerifyCloudTrailsExistAndAreMultiRegion
                Action:
                - cloudtrail:DescribeTrails
                - cloudtrail:GetTrailStatus
                - cloudtrail:GetEventSelectors
                Effect: Allow
                Resource: '*'
            -   Sid: CreateCloudTrailIfMissing
                Action:
                - cloudtrail:CreateTrail
                - cloudtrail:StartLogging
                - cloudtrail:DeleteTrail
                Effect: Allow
                Resource: arn:aws:cloudtrail:*:*:trail/DO-NOT-DELETE-GatedGarden-Audit*
            -   Sid: VerifyCWEAuditRulesExists
                Action:
                - events:ListRuleNamesByTarget
                - events:ListRules
                - events:ListTargetsByRule
                Effect: Allow
                Resource: '*'
            -   Sid: VerifyCWESingleAuditRule
                Action:
                - events:DescribeRule
                Effect: Allow
                Resource: arn:aws:events:*:*:rule/DO-NOT-DELETE-GatedGarden-Audit*
            -   Sid: CreateCodeDeployAndLambdaCWERules
                Action:
                - events:PutRule
                Effect: Allow
                Resource: arn:aws:events:*:*:rule/DO-NOT-DELETE-GatedGarden-Audit*
                Condition:
                    StringEquals:
                        events:source:
                        - aws.codedeploy
                        - aws.lambda
                        - aws.codecommit
                        - aws.codebuild
                        - aws.ecs
                        - aws.codeartifact
            -   Sid: DeliverCWEEventsToGatedGardenBus
                Action:
                - events:PutTargets
                Effect: Allow
                Resource: arn:aws:events:*:*:rule/DO-NOT-DELETE-GatedGarden-Audit*
                Condition:
                    ArnLike:
                        events:TargetArn:
                        - arn:aws:events:*:222385417670:event-bus/default
            -   Sid: CreateCloudTrailBucketIfMissing
                Action:
                - s3:CreateBucket
                - s3:PutLifecycleConfiguration
                - s3:PutBucketPolicy
                - s3:GetBucketAcl
                - s3:GetBucketLogging
                - s3:GetBucketPolicy
                - s3:GetLifecycleConfiguration
                - s3:PutBucketAcl
                - s3:PutBucketLogging
                Effect: Allow
                Resource: arn:aws:s3:::cloudtrail-awslogs-gatedgardenaudit-*
            -   Sid: CreateCodeBuildTrackingInfoBucketIfMissing
                Effect: Allow
                Action:
                - s3:CreateBucket
                - s3:PutBucketPolicy
                - s3:PutLifecycleConfiguration
                - s3:ListBucket
                - s3:GetObject
                - s3:GetBucketAcl
                - s3:GetBucketLogging
                - s3:GetBucketPolicy
                - s3:GetLifecycleConfiguration
                - s3:PutBucketAcl
                - s3:PutBucketLogging
                Resource: arn:aws:s3:::do-not-delete-gatedgarden-audit-*
            -   Sid: AntiEntropyListOfLambdaAndValidatingLatest
                Action:
                - lambda:GetFunctionConfiguration
                - lambda:ListFunctions
                - lambda:ListVersionsByFunction
                Effect: Allow
                Resource: '*'
            -   Sid: GetFunctionMetadata
                Action:
                - lambda:GetFunction
                Effect: Allow
                Resource: '*'
            -   Sid: CodeDeployAudit
                Action:
                - codedeploy:BatchGetApplications
                - codedeploy:BatchGetDeployments
                - codedeploy:BatchGetOnPremisesInstances
                - codedeploy:GetApplication
                - codedeploy:GetApplicationRevision
                - codedeploy:GetDeployment
                - codedeploy:GetDeploymentConfig
                - codedeploy:GetDeploymentGroup
                - codedeploy:GetDeploymentInstance
                - codedeploy:GetOnPremisesInstance
                - codedeploy:ListApplicationRevisions
                - codedeploy:ListApplications
                - codedeploy:ListDeploymentConfigs
                - codedeploy:ListDeploymentGroups
                - codedeploy:ListDeploymentInstances
                - codedeploy:ListDeployments
                - codedeploy:ListOnPremisesInstances
                Effect: Allow
                Resource: '*'
            -   Sid: CodeArtifactAudit
                Action:
                - codeartifact:DescribeRepository
                - codeartifact:DescribePackageVersion
                - codeartifact:ListDomains
                - codeartifact:ListRepositories
                - codeartifact:ListPackages
                - codeartifact:ListPackageVersions
                Effect: Allow
                Resource: '*'
            -   Sid: CodeArtifactModify
                Action:
                - codeartifact:UpdatePackageVersionsStatus
                Effect: Allow
                Resource: '*'
            -   Sid: CodeBuildBuildHistoryAndDetailsReadAccess
                Effect: Allow
                Action:
                - codebuild:BatchGetBuilds
                - codebuild:ListBuilds
                Resource: arn:aws:codebuild:*:*:*
            -   Sid: DescribeAndListECSTasks
                Action:
                - ecs:DescribeTasks
                - ecs:ListTasks
                Effect: Allow
                Resource: '*'
            -   Sid: ConfigureS3AuditBuckets
                Effect: Allow
                Action:
                - s3:PutEncryptionConfiguration
                - s3:GetEncryptionConfiguration
                - s3:GetBucketPublicAccessBlock
                - s3:PutBucketPublicAccessBlock
                Resource:
                - arn:aws:s3:::cloudtrail-awslogs-gatedgardenaudit-*
                - arn:aws:s3:::do-not-delete-gatedgarden-audit-*
            -   Sid: ECRAudit
                Effect: Allow
                Action:
                - ecr:BatchGetImage
                - ecr:GetDownloadUrlForLayer
                - ecr:DescribeRepositories
                Resource: '*'
-   roleName: IibsAdminAccess-DO-NOT-DELETE
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2008-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS:
                - arn:aws:iam::621463273587:role/BrokerService-Prod
                - arn:aws:iam::048851363556:role/BrokerService-Prod
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: GetSecurityTokenAdmin
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS:
                - arn:aws:iam::621463273587:role/BrokerService-Prod
                - arn:aws:iam::048851363556:role/BrokerService-Prod
            Action:
            - sts:SetSourceIdentity
            - sts:TagSession
    inlinePolicies:
        IIBSPolicy:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - iam:GetLoginProfile
                - iam:DeleteLoginProfile
                - iam:DeleteAccessKey
                - iam:GetAccessKeyLastUsed
                - iam:ListAccessKeys
                - iam:UpdateAccessKey
                - iam:PutUserPolicy
                Resource: '*'
            -   Action: iam:AttachRolePolicy
                Condition:
                    ArnEquals:
                        iam:PolicyARN: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
                Effect: Allow
                Resource: '*'
            -   Action:
                - iam:CreateInstance*
                - iam:CreateRole
                - iam:DeleteRolePolicy
                - iam:DeleteRolePermissions*
                - iam:DetachRolePolicy
                - iam:ListAttachedRole*
                - iam:ListRoleP*
                - iam:PassRole
                - iam:RemoveRoleFrom*
                - iam:UpdateAssumeRolePolicy
                - ssm:CreateAssociation
                - ssm:CreateDocument
                - ssm:GetDocument
                - ssm:GetService*
                - ssm:UpdateAssociation
                - ssm:UpdateDocument*
                - ssm:UpdateService*
                Effect: Allow
                Resource:
                - arn:aws:iam::*:instance-profile/Epoxy*
                - arn:aws:iam::*:role/Epoxy*
                - arn:aws:ssm:*:*:association/*
                - arn:aws:ssm:*:*:document/Epoxy*
                - arn:aws:ssm:*:*:servicesetting/ssm/managed-instance/default-ec2*
            -   Action:
                - ec2:AssociateIamInstanceProfile
                - ec2:DescribeInstances
                - iam:AddRoleToInstance*
                - iam:GetInstance*
                - iam:GetRole
                - ssm:DescribeAssociation
                - ssm:ListA*
                Effect: Allow
                Resource: '*'
            -   Effect: Allow
                Action:
                - cloudfront:GetDistributionConfig
                - cloudfront:UpdateDistribution
                Resource: '*'
            -   Effect: Allow
                Action:
                - lightsail:GetInstance
                - lightsail:PutInstancePublicPorts
                - lightsail:StopInstance
                Resource: '*'
            -   Effect: Allow
                Action:
                - workspaces:StopWorkspaces
                - workspaces:ModifyWorkspaceProperties
                - workspaces:DescribeWorkspaces
                - ec2:AuthorizeSecurityGroupEgress
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribeNetworkInterfaceAttribute
                - ec2:DescribeSecurityGroups
                - ec2:DescribeSubnets
                - ec2:CreateSecurityGroup
                - ec2:RevokeSecurityGroupEgress
                - ec2:RevokeSecurityGroupIngress
                - ec2:ModifyNetworkInterfaceAttribute
                Resource: '*'
        LoginProfileAccessPolicy:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - iam:GetLoginProfile
                - iam:DeleteLoginProfile
                Resource: '*'
-   roleName: IMDSv2-automigrator
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                Service: naws.imds.automigrator.us-east-1.aws.internal
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: IMDSv2-automigratorFzgFb1zvjYkW
    inlinePolicies:
        IMDSv2-automigrator:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - cloudwatch:PutMetricAlarm
                - cloudwatch:DescribeAlarmHistory
                - cloudwatch:DeleteAlarms
                - cloudwatch:DescribeAlarms
                Resource: arn:aws:cloudwatch:*:*:alarm:NawsIMDSv2MigratorAlarm
            -   Effect: Allow
                Action:
                - ec2:ModifyInstanceMetadataOptions
                - ec2:DescribeInstances
                - cloudwatch:GetMetricData
                - cloudwatch:ListMetrics
                Resource: '*'
-   roleName: importtestrole
    deletionPolicy: RETAIN
    description: Allows Lambda functions to call AWS services on your behalf.
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Effect: Allow
            Principal:
                Service:
                - sns.amazonaws.com
                - lambda.amazonaws.com
            Action: sts:AssumeRole
    tags:
    -   key: Application
        value: IIBS
    -   key: Environment
        value: Production
    -   key: rere
        value: rerere
    managedPolicies:
    - arn:aws:iam::aws:policy/AdministratorAccess
    - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
    - arn:aws:iam::aws:policy/AlexaForBusinessFullAccess
    - arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup
-   roleName: InternalAuditInternal
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                Service: internalaudit.aws.internal
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: InternalAuditInternalhDPDHwolDwDv
    managedPolicies:
    - arn:aws:iam::aws:policy/SecurityAudit
-   roleName: IsengardAuditorRole-DO-NOT-DELETE
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::727820809195:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: IsengardAuditorExternalIdpuLuswhixOlT
    inlinePolicies:
        IsengardAuditorPolicy:
            Version: '2012-10-17'
            Statement:
            -   Action:
                - autoscaling:DescribeAdjustmentTypes
                - autoscaling:DescribeAutoScalingGroups
                - autoscaling:DescribeAutoScalingInstances
                - autoscaling:DescribeAutoScalingNotificationTypes
                - autoscaling:DescribeLaunchConfigurations
                - autoscaling:DescribeMetricCollectionTypes
                - autoscaling:DescribeNotificationConfigurations
                - autoscaling:DescribePolicies
                - autoscaling:DescribeScalingActivities
                - autoscaling:DescribeScalingProcessTypes
                - autoscaling:DescribeScheduledActions
                - autoscaling:DescribeTags
                - autoscaling:DescribeTriggers
                Effect: Allow
                Resource: '*'
            -   Action:
                - cloudformation:DescribeStackEvents
                - cloudformation:DescribeStackResource
                - cloudformation:DescribeStackResources
                - cloudformation:DescribeStacks
                - cloudformation:GetTemplate
                - cloudformation:ListStacks
                - cloudformation:ListStackResources
                Effect: Allow
                Resource: '*'
            -   Action:
                - cloudfront:GetCloudFrontOriginAccessIdentity
                - cloudfront:GetCloudFrontOriginAccessIdentityConfig
                - cloudfront:GetDistribution
                - cloudfront:GetDistributionConfig
                - cloudfront:GetInvalidation
                - cloudfront:GetStreamingDistribution
                - cloudfront:GetStreamingDistributionConfig
                - cloudfront:ListCloudFrontOriginAccessIdentities
                - cloudfront:ListDistributions
                - cloudfront:ListInvalidations
                - cloudfront:ListStreamingDistributions
                Effect: Allow
                Resource: '*'
            -   Action:
                - cloudtrail:DescribeTrails
                Effect: Allow
                Resource: '*'
            -   Action:
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                Effect: Allow
                Resource: '*'
            -   Action:
                - directconnect:DescribeConnectionDetail
                - directconnect:DescribeConnections
                - directconnect:DescribeOfferingDetail
                - directconnect:DescribeOfferings
                - directconnect:DescribeVirtualGateways
                - directconnect:DescribeVirtualInterfaces
                Effect: Allow
                Resource: '*'
            -   Action:
                - dynamodb:ListTables
                Effect: Allow
                Resource: '*'
            -   Action:
                - ec2:DescribeAccountAttributes
                - ec2:DescribeAddresses
                - ec2:DescribeAvailabilityZones
                - ec2:DescribeBundleTasks
                - ec2:DescribeConversionTasks
                - ec2:DescribeCustomerGateways
                - ec2:DescribeDhcpOptions
                - ec2:DescribeExportTasks
                - ec2:DescribeImageAttribute
                - ec2:DescribeImages
                - ec2:DescribeInstanceAttribute
                - ec2:DescribeInstanceStatus
                - ec2:DescribeInstances
                - ec2:DescribeInternetGateways
                - ec2:DescribeKeyPairs
                - ec2:DescribeLicenses
                - ec2:DescribeNetworkAcls
                - ec2:DescribeNetworkInterfaceAttribute
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribePlacementGroups
                - ec2:DescribeRegions
                - ec2:DescribeReservedInstances
                - ec2:DescribeReservedInstancesOfferings
                - ec2:DescribeRouteTables
                - ec2:DescribeSecurityGroups
                - ec2:DescribeSnapshotAttribute
                - ec2:DescribeSnapshots
                - ec2:DescribeSpotDatafeedSubscription
                - ec2:DescribeSpotInstanceRequests
                - ec2:DescribeSpotPriceHistory
                - ec2:DescribeSubnets
                - ec2:DescribeTags
                - ec2:DescribeVolumeAttribute
                - ec2:DescribeVolumeStatus
                - ec2:DescribeVolumes
                - ec2:DescribeVpcPeeringConnection
                - ec2:DescribeVpcs
                - ec2:DescribeVpnConnections
                - ec2:DescribeVpnGateways
                Effect: Allow
                Resource: '*'
            -   Action:
                - elasticbeanstalk:DescribeApplicationVersions
                - elasticbeanstalk:DescribeApplications
                - elasticbeanstalk:DescribeConfigurationOptions
                - elasticbeanstalk:DescribeConfigurationSettings
                - elasticbeanstalk:DescribeEnvironmentResources
                - elasticbeanstalk:DescribeEnvironments
                - elasticbeanstalk:DescribeEvents
                Effect: Allow
                Resource: '*'
            -   Action:
                - elasticache:DescribeCacheClusters
                - elasticache:DescribeCacheParameterGroups
                - elasticache:DescribeCacheParameters
                - elasticache:DescribeCacheSecurityGroups
                - elasticache:DescribeEngineDefaultParameters
                - elasticache:DescribeEvents
                Effect: Allow
                Resource: '*'
            -   Action:
                - elasticloadbalancing:DescribeInstanceHealth
                - elasticloadbalancing:DescribeLoadBalancers
                Effect: Allow
                Resource: '*'
            -   Action:
                - elasticmapreduce:DescribeJobFlows
                Effect: Allow
                Resource: '*'
            -   Action:
                - glacier:ListVaults
                Effect: Allow
                Resource: '*'
            -   Action:
                - iam:GenerateCredentialReport
                - iam:GetAccountPasswordPolicy
                - iam:GetAccountSummary
                - iam:GetGroup
                - iam:GetGroupPolicy
                - iam:GetInstanceProfile
                - iam:GetLoginProfile
                - iam:GetRole
                - iam:GetRolePolicy
                - iam:GetServerCertificate
                - iam:GetUser
                - iam:GetUserPolicy
                - iam:ListAccessKeys
                - iam:ListAccountAliases
                - iam:ListGroupPolicies
                - iam:ListGroups
                - iam:ListGroupsForUser
                - iam:ListInstanceProfiles
                - iam:ListInstanceProfilesForRole
                - iam:ListMFADevices
                - iam:ListRolePolicies
                - iam:ListRoles
                - iam:ListServerCertificates
                - iam:ListSigningCertificates
                - iam:ListUserPolicies
                - iam:ListUsers
                - iam:ListVirtualMFADevices
                Effect: Allow
                Resource: '*'
            -   Action:
                - rds:DescribeEngineDefaultParameters
                - rds:DescribeDBInstances
                - rds:DescribeDBLogFiles
                - rds:DescribeDBParameterGroups
                - rds:DescribeDBParameters
                - rds:DescribeDBSecurityGroups
                - rds:DescribeDBSnapshots
                - rds:DescribeDBEngineVersions
                - rds:DescribeDBSubnetGroups
                - rds:DescribeEventCategories
                - rds:DescribeEvents
                - rds:DescribeEventSubscriptions
                - rds:DescribeOptionGroups
                - rds:DescribeOptionGroupOptions
                - rds:DescribeOrderableDBInstanceOptions
                - rds:DescribeReservedDBInstances
                - rds:DescribeReservedDBInstancesOfferings
                - rds:DownloadDBLogFilePortion
                - rds:ListTagsForResource
                Effect: Allow
                Resource: '*'
            -   Action:
                - redshift:DescribeClusterParameterGroups
                - redshift:DescribeClusterParameters
                - redshift:DescribeClusterSecurityGroups
                - redshift:DescribeClusterSnapshots
                - redshift:DescribeClusterSubnetGroups
                - redshift:DescribeClusterVersions
                - redshift:DescribeClusters
                - redshift:DescribeDefaultClusterParameters
                - redshift:DescribeEvents
                - redshift:DescribeOrderableClusterOptions
                - redshift:DescribeReservedNodeOfferings
                - redshift:DescribeReservedNodes
                - redshift:DescribeResize
                Effect: Allow
                Resource: '*'
            -   Action:
                - route53:GetHostedZone
                - route53:ListHostedZones
                - route53:ListResourceRecordSets
                Effect: Allow
                Resource: '*'
            -   Action:
                - s3:GetBucketAcl
                - s3:GetBucketLocation
                - s3:GetBucketLogging
                - s3:GetBucketNotification
                - s3:GetBucketPolicy
                - s3:GetBucketRequestPayment
                - s3:GetBucketVersioning
                - s3:GetBucketWebsite
                - s3:GetLifecycleConfiguration
                - s3:GetObjectAcl
                - s3:GetObjectVersionAcl
                - s3:ListAllMyBuckets
                - s3:ListBucket
                Effect: Allow
                Resource: '*'
            -   Action:
                - sdb:DomainMetadata
                - sdb:ListDomains
                Effect: Allow
                Resource: '*'
            -   Action:
                - sns:GetTopicAttributes
                - sns:ListTopics
                Effect: Allow
                Resource: '*'
            -   Action:
                - sqs:GetQueueAttributes
                - sqs:ListQueues
                Effect: Allow
                Resource: '*'
            -   Action:
                - kms:Describe*
                - kms:Get*
                - kms:List*
                Effect: Allow
                Resource:
                - '*'
            -   Action:
                - ds:Check*
                - ds:Describe*
                - ds:Get*
                - ds:List*
                Effect: Allow
                Resource:
                - '*'
            -   Action:
                - codedeploy:Get*
                - codedeploy:List*
                Effect: Allow
                Resource:
                - '*'
-   roleName: IsengardCloudTrailRole
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::086441151436:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: IsengardCloudTrailRolebJJqKb8lOSQQ
    inlinePolicies:
        AWSCloudTrailAccessPolicy:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action:
                - s3:CreateBucket
                - s3:PutBucketPolicy
                - s3:PutLifecycleConfiguration
                - s3:PutEncryptionConfiguration
                - s3:GetBucketAcl
                Resource: arn:aws:s3:::cloudtrail-awslogs-*
            -   Effect: Allow
                Action:
                - s3:ListAllMyBuckets
                Resource: arn:aws:s3:::*
            -   Effect: Allow
                Action:
                - cloudtrail:CreateTrail
                - cloudtrail:StartLogging
                Resource: '*'
-   roleName: IsengardConfigRole
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                Service: config-setup.amazonaws.com
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: IsengardConfigRoleKjr3izBmh1d3
-   roleName: IsengardRole-DO-NOT-DELETE
    deletionPolicy: RETAIN
    sessionDuration: 3600
    iamPath: /
    trustPolicy:
        Version: '2012-10-17'
        Statement:
        -   Sid: ''
            Effect: Allow
            Principal:
                AWS: arn:aws:iam::727820809195:root
            Action: sts:AssumeRole
            Condition:
                StringEquals:
                    sts:ExternalId: IsengardExternalIdRhHPQgLzmSUf
    inlinePolicies:
        IsengardControllerPolicy:
            Version: '2012-10-17'
            Statement:
            -   Effect: Allow
                Action: '*'
                Resource: '*'
